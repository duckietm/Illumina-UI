{"version":3,"file":"basis.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/Basis.ts","../../src/TranscoderWorkerWrapper.ts","../../src/TranscoderWorker.ts","../../src/BasisParser.ts","../../src/BasisLoader.ts","../../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { TYPES } from '@pixi/constants';\nimport { INTERNAL_FORMATS } from '@pixi/compressed-textures';\n\n/**\n * The transcoding formats provided by basis_universal.\n *\n * NOTE: Not all of these formats are supported on WebGL!\n * @ignore\n */\n/* eslint-disable camelcase, @typescript-eslint/indent */\nexport enum BASIS_FORMATS\n{\n    cTFETC1 = 0,\n    cTFETC2 = 1,\n    cTFBC1 = 2,\n    cTFBC3 = 3,\n    cTFBC4 = 4,\n    cTFBC5 = 5,\n    cTFBC7 = 6,\n    cTFPVRTC1_4_RGB = 8,\n    cTFPVRTC1_4_RGBA = 9,\n    cTFASTC_4x4 = 10,\n    cTFATC_RGB = 11,\n    cTFATC_RGBA_INTERPOLATED_ALPHA = 12,\n    cTFRGBA32 = 13,\n    cTFRGB565 = 14,\n    cTFBGR565 = 15,\n    cTFRGBA4444 = 16,\n}\n/* eslint-enable camelcase, @typescript-eslint/indent */\n\n/**\n * Maps {@link BASIS_FORMATS} to {@link PIXI.INTERNAL_FORMATS}\n * @ignore\n */\nexport const BASIS_FORMAT_TO_INTERNAL_FORMAT: { [id: number]: INTERNAL_FORMATS } = {\n    [BASIS_FORMATS.cTFETC1]: INTERNAL_FORMATS.COMPRESSED_RGB_ETC1_WEBGL,\n    [BASIS_FORMATS.cTFBC1]: INTERNAL_FORMATS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    [BASIS_FORMATS.cTFBC3]: INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGB]: INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGBA]: INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n    [BASIS_FORMATS.cTFATC_RGB]: INTERNAL_FORMATS.COMPRESSED_RGB_ATC_WEBGL,\n    [BASIS_FORMATS.cTFASTC_4x4]: INTERNAL_FORMATS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n};\n\n/**\n * Maps {@link BASIS_FORMATS} to {@link PIXI.TYPES}. These formats are a fallback when the basis file cannot be transcoded\n * to a valid compressed texture format.\n *\n * NOTE: {@link BASIS_FORMATS.cTFBGR565} is not supported, while {@link BASIS_FORMATS.cTFRGBA4444} is not implemented by\n *  [at]pixi/basis.\n * @ignore\n */\nexport const BASIS_FORMAT_TO_TYPE: { [id: number]: TYPES } = {\n    [BASIS_FORMATS.cTFRGBA32]: TYPES.UNSIGNED_BYTE,\n    [BASIS_FORMATS.cTFRGB565]: TYPES.UNSIGNED_SHORT_5_6_5,\n    [BASIS_FORMATS.cTFRGBA4444]: TYPES.UNSIGNED_SHORT_4_4_4_4,\n};\n\n/**\n * Maps {@link PIXI.INTERNAL_FORMATS} to {@link BASIS_FORMATS}\n * @ignore\n */\nexport const INTERNAL_FORMAT_TO_BASIS_FORMAT: { [id: number]: number }\n    = (Object.keys(BASIS_FORMAT_TO_INTERNAL_FORMAT) as string[])\n        .map((key: string) => Number(key))\n        .reduce((reverseMap: any, basisFormat: any) =>\n        {\n            reverseMap[(BASIS_FORMAT_TO_INTERNAL_FORMAT as any)[basisFormat]] = basisFormat;\n\n            return reverseMap;\n        }, {});\n\n/**\n * Enumerates the basis formats with alpha components\n * @ignore\n */\nexport const BASIS_FORMATS_ALPHA: { [id: number]: boolean } = {\n    [BASIS_FORMATS.cTFBC3]: true,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGBA]: true,\n    [BASIS_FORMATS.cTFASTC_4x4]: true,\n};\n\n/**\n * Binding to C++ {@code BasisFile} wrapper class.\n * @see https://github.com/BinomialLLC/basis_universal/blob/master/webgl/transcoder/basis_wrappers.cpp\n * @private\n */\nexport declare class BasisFile\n{\n    constructor(buffer: Uint8Array);\n    getNumImages(): number;\n    getNumLevels(imageId: number): number;\n    getImageWidth(imageId: number, level: number): number;\n    getImageHeight(imageId: number, level: number): number;\n    getHasAlpha(): boolean;\n    startTranscoding(): boolean;\n    getImageTranscodedSizeInBytes(\n        imageId: number,\n        level: number,\n        basisFormat: number): number;\n    transcodeImage(dstBuff: Uint8Array,\n        imageId: number,\n        level: number,\n        basisFormat: BASIS_FORMATS,\n        pvrtcWrapAddressing: boolean,\n        getAlphaForOpaqueFormats: boolean): number;\n    close(): void;\n    delete(): void;\n}\n\n// Missing typings? - https://github.com/microsoft/TypeScript/issues/39655\n/**\n * Compressed texture extensions relevant to the formats into which Basis can decompress into.\n * @ignore\n */\n/* eslint-disable camelcase */\nexport type BasisTextureExtensions = {\n    s3tc?: WEBGL_compressed_texture_s3tc,\n    s3tc_sRGB: WEBGL_compressed_texture_s3tc_srgb,\n    etc: any,\n    etc1: any,\n    pvrtc: any,\n    atc: any,\n    astc: WEBGL_compressed_texture_astc\n};\n/* eslint-enable camelcase */\n\n/**\n * API provided by basis_universal WebGL library.\n * @ignore\n */\nexport type BasisBinding = {\n    BasisFile: typeof BasisFile,\n    initializeBasis(): void\n};\n\n/**\n * Binding to basis_universal WebGL library.\n * @see https://github.com/BinomialLLC/basis_universal/blob/master/webgl/transcoder/build/basis_transcoder.js\n * @ignore\n */\nexport type BASIS = (opts?: { wasmBinary: ArrayBuffer }) => Promise<BasisBinding>;\n","import type { BASIS, BASIS_FORMATS, BasisBinding } from './Basis';\n\n/**\n * Initialization message sent by the main thread.\n * @ignore\n */\nexport interface IInitializeTranscoderMessage\n{\n    wasmSource: ArrayBuffer;\n    type: 'init';\n}\n\n/**\n * Request parameters for transcoding basis files. It only supports transcoding all of the basis file at once.\n * @ignore\n */\nexport interface ITranscodeMessage\n{\n    requestID?: number;\n    rgbFormat: number;\n    rgbaFormat?: number;\n    basisData?: Uint8Array;\n    type: 'transcode';\n}\n\n/** @ignore */\nexport interface ITranscodedImage\n{\n    imageID: number;\n    levelArray: Array<{\n        levelID: number,\n        levelWidth: number,\n        levelHeight: number,\n        levelBuffer: Uint8Array\n    }>;\n    width: number;\n    height: number;\n}\n\n/**\n * Response format for {@link TranscoderWorker}.\n * @ignore\n */\nexport interface ITranscodeResponse\n{\n    type: 'init' | 'transcode';\n    requestID?: number;\n    success: boolean;\n    basisFormat?: BASIS_FORMATS;\n    imageArray?: Array<{\n        imageID: number,\n        levelArray: Array<{\n            levelID: number,\n            levelWidth: number,\n            levelHeight: number,\n            levelBuffer: Uint8Array\n        }>,\n        width: number,\n        height: number\n    }>;\n}\n\ndeclare global\n{\n    interface Window\n    {\n        BASIS: BASIS;\n    }\n}\n\n/**\n * This wraps the transcoder web-worker functionality; it can be converted into a string to get the source code. It expects\n * you to prepend the transcoder JavaScript code so that the `BASIS` namespace is available.\n *\n * The transcoder worker responds to two types of messages: \"init\" and \"transcode\". You must always send the first \"init\"\n * {@link IInitializeTranscoderMessage} message with the WebAssembly binary; if the transcoder is successfully initialized,\n * the web-worker will respond by sending another {@link ITranscodeResponse} message with `success: true`.\n * @ignore\n */\nexport function TranscoderWorkerWrapper(): void\n{\n    let basisBinding: BasisBinding;\n\n    const messageHandlers = {\n        init: (message: IInitializeTranscoderMessage): ITranscodeResponse =>\n        {\n            if (!self.BASIS)\n            {\n                console.warn('jsSource was not prepended?');\n\n                return {\n                    type: 'init',\n                    success: false\n                };\n            }\n\n            self.BASIS({ wasmBinary: message.wasmSource }).then((basisLibrary) =>\n            {\n                basisLibrary.initializeBasis();\n                basisBinding = basisLibrary;\n\n                (self as any).postMessage({\n                    type: 'init',\n                    success: true\n                });\n            });\n\n            return null;\n        },\n        transcode(message: ITranscodeMessage): ITranscodeResponse\n        {\n            const basisData = message.basisData;\n            const BASIS = basisBinding;\n\n            const data = basisData;\n            const basisFile = new BASIS.BasisFile(data);\n            const imageCount = basisFile.getNumImages();\n            const hasAlpha = basisFile.getHasAlpha();\n\n            const basisFormat = hasAlpha\n                ? message.rgbaFormat\n                : message.rgbFormat;\n            const basisFallbackFormat = 14;// BASIS_FORMATS.cTFRGB565 (cannot import values into web-worker!)\n            const imageArray = new Array(imageCount);\n\n            let fallbackMode = false;\n\n            if (!basisFile.startTranscoding())\n            {\n                basisFile.close();\n                basisFile.delete();\n\n                return {\n                    type: 'transcode',\n                    requestID: message.requestID,\n                    success: false,\n                    imageArray: null\n                };\n            }\n\n            for (let i = 0; i < imageCount; i++)\n            {\n                const levels = basisFile.getNumLevels(i);\n                const imageResource: ITranscodedImage = {\n                    imageID: i,\n                    levelArray: new Array<{\n                        levelID: number,\n                        levelWidth: number,\n                        levelHeight: number,\n                        levelBuffer: Uint8Array\n                    }>(),\n                    width: null,\n                    height: null\n                };\n\n                for (let j = 0; j < levels; j++)\n                {\n                    const format = !fallbackMode ? basisFormat : basisFallbackFormat;\n\n                    const width = basisFile.getImageWidth(i, j);\n                    const height = basisFile.getImageHeight(i, j);\n                    const byteSize = basisFile.getImageTranscodedSizeInBytes(i, j, format);\n\n                    const alignedWidth = (width + 3) & ~3;\n                    const alignedHeight = (height + 3) & ~3;\n\n                    // Level 0 is texture's actual width, height\n                    if (j === 0)\n                    {\n                        imageResource.width = alignedWidth;\n                        imageResource.height = alignedHeight;\n                    }\n\n                    const imageBuffer = new Uint8Array(byteSize);\n\n                    if (!basisFile.transcodeImage(imageBuffer, i, j, format, false, false))\n                    {\n                        if (fallbackMode)\n                        {\n                            // We failed in fallback mode as well!\n                            console.error(`Basis failed to transcode image ${i}, level ${j}!`);\n\n                            return { type: 'transcode', requestID: message.requestID, success: false };\n                        }\n\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`Basis failed to transcode image ${i}, level ${j}! Retrying to an uncompressed texture format!`);\n                        i = -1;\n                        fallbackMode = true;\n\n                        break;\n                    }\n\n                    imageResource.levelArray.push({\n                        levelID: j,\n                        levelWidth: width,\n                        levelHeight: height,\n                        levelBuffer: imageBuffer\n                    });\n                }\n\n                imageArray[i] = imageResource;\n            }\n\n            basisFile.close();\n            basisFile.delete();\n\n            return {\n                type: 'transcode',\n                requestID: message.requestID,\n                success: true,\n                basisFormat: !fallbackMode ? basisFormat : basisFallbackFormat,\n                imageArray\n            };\n        }\n    };\n\n    self.onmessage = (e: { data: Partial<IInitializeTranscoderMessage | ITranscodeMessage> }): void =>\n    {\n        const msg = e.data;\n        const response = messageHandlers[msg.type](msg as any);\n\n        if (response)\n        {\n            (self as any).postMessage(response);\n        }\n    };\n}\n","import type { BASIS_FORMATS } from './Basis';\nimport type { ITranscodeResponse } from './TranscoderWorkerWrapper';\nimport { TranscoderWorkerWrapper } from './TranscoderWorkerWrapper';\n\n/**\n * Worker class for transcoding *.basis files in background threads.\n *\n * To enable asynchronous transcoding, you need to provide the URL to the basis_universal transcoding\n * library.\n * @memberof PIXI.BasisLoader\n */\nexport class TranscoderWorker\n{\n    // IMPLEMENTATION NOTE: TranscoderWorker tracks transcoding requests with a requestID; the worker can be issued\n    // multiple requests (once it is initialized) and the response contains the requestID of the triggering request. Based on\n    // the response, the transcodeAsync promise is fulfilled or rejected.\n\n    // TODO: Publish our own @pixi/basis package & set default URL to jsdelivr/cdnjs\n    /** URL for the script containing the basis_universal library. */\n    static bindingURL: string;\n    static jsSource: string;\n    static wasmSource: ArrayBuffer;\n\n    private static _onTranscoderInitializedResolve: () => void;\n\n    /** a promise that when reslved means the transcoder is ready to be used */\n    public static onTranscoderInitialized = new Promise<void>((resolve) =>\n    {\n        TranscoderWorker._onTranscoderInitializedResolve = resolve;\n    });\n\n    isInit: boolean;\n    load: number;\n    requests: { [id: number]: {\n        resolve: (data: ITranscodeResponse) => void,\n        reject: () => void\n    } } = {};\n\n    private static _workerURL: string;\n    private static _tempID = 0;\n\n    /** Generated URL for the transcoder worker script. */\n    static get workerURL(): string\n    {\n        if (!TranscoderWorker._workerURL)\n        {\n            let workerSource = TranscoderWorkerWrapper.toString();\n\n            const beginIndex = workerSource.indexOf('{');\n            const endIndex = workerSource.lastIndexOf('}');\n\n            workerSource = workerSource.slice(beginIndex + 1, endIndex);\n\n            if (TranscoderWorker.jsSource)\n            {\n                workerSource = `${TranscoderWorker.jsSource}\\n${workerSource}`;\n            }\n\n            TranscoderWorker._workerURL = URL.createObjectURL(new Blob([workerSource]));\n        }\n\n        return TranscoderWorker._workerURL;\n    }\n\n    protected worker: Worker;\n    protected initPromise: Promise<void>;\n    protected onInit: () => void;\n\n    constructor()\n    {\n        this.isInit = false;\n        this.load = 0;\n        this.initPromise = new Promise((resolve) => { this.onInit = resolve; });\n\n        if (!TranscoderWorker.wasmSource)\n        {\n            console.warn('PIXI.resources.BasisResource.TranscoderWorker has not been given the transcoder WASM binary!');\n        }\n\n        this.worker = new Worker(TranscoderWorker.workerURL);\n        this.worker.onmessage = this.onMessage;\n        this.worker.postMessage({\n            type: 'init',\n            jsSource: TranscoderWorker.jsSource,\n            wasmSource: TranscoderWorker.wasmSource\n        });\n    }\n\n    /** @returns a promise that is resolved when the web-worker is initialized */\n    initAsync(): Promise<void>\n    {\n        return this.initPromise;\n    }\n\n    /**\n     * Creates a promise that will resolve when the transcoding of a *.basis file is complete.\n     * @param basisData - *.basis file contents\n     * @param rgbaFormat - transcoding format for RGBA files\n     * @param rgbFormat - transcoding format for RGB files\n     * @returns a promise that is resolved with the transcoding response of the web-worker\n     */\n    async transcodeAsync(\n        basisData: Uint8Array,\n        rgbaFormat: BASIS_FORMATS,\n        rgbFormat: BASIS_FORMATS\n    ): Promise<ITranscodeResponse>\n    {\n        ++this.load;\n\n        const requestID = TranscoderWorker._tempID++;\n        const requestPromise = new Promise((resolve: (data: ITranscodeResponse) => void, reject: () => void) =>\n        {\n            this.requests[requestID] = {\n                resolve,\n                reject\n            };\n        });\n\n        this.worker.postMessage({\n            requestID,\n            basisData,\n            rgbaFormat,\n            rgbFormat,\n            type: 'transcode'\n        });\n\n        return requestPromise;\n    }\n\n    /**\n     * Handles responses from the web-worker\n     * @param e - a message event containing the transcoded response\n     */\n    protected onMessage = (e: MessageEvent): void =>\n    {\n        const data = e.data as ITranscodeResponse;\n\n        if (data.type === 'init')\n        {\n            if (!data.success)\n            {\n                throw new Error('BasisResource.TranscoderWorker failed to initialize.');\n            }\n\n            this.isInit = true;\n            this.onInit();\n        }\n        else if (data.type === 'transcode')\n        {\n            --this.load;\n\n            const requestID = data.requestID;\n\n            if (data.success)\n            {\n                this.requests[requestID].resolve(data);\n            }\n            else\n            {\n                this.requests[requestID].reject();\n            }\n\n            delete this.requests[requestID];\n        }\n    };\n\n    /**\n     * Loads the transcoder source code\n     * @param jsURL - URL to the javascript basis transcoder\n     * @param wasmURL - URL to the wasm basis transcoder\n     * @returns A promise that resolves when both the js and wasm transcoders have been loaded.\n     */\n    static loadTranscoder(jsURL: string, wasmURL: string): Promise<[void, void]>\n    {\n        const jsPromise = fetch(jsURL)\n            .then((res: Response) => res.text())\n            .then((text: string) => { TranscoderWorker.jsSource = text; });\n        const wasmPromise = fetch(wasmURL)\n            .then((res: Response) => res.arrayBuffer())\n            .then((arrayBuffer: ArrayBuffer) => { TranscoderWorker.wasmSource = arrayBuffer; });\n\n        return Promise.all([jsPromise, wasmPromise]).then((data) =>\n\n        {\n            this._onTranscoderInitializedResolve();\n\n            return data;\n        });\n    }\n\n    /**\n     * Set the transcoder source code directly\n     * @param jsSource - source for the javascript basis transcoder\n     * @param wasmSource - source for the wasm basis transcoder\n     */\n    static setTranscoder(jsSource: string, wasmSource: ArrayBuffer): void\n    {\n        TranscoderWorker.jsSource = jsSource;\n        TranscoderWorker.wasmSource = wasmSource;\n    }\n}\n","import { TYPES } from '@pixi/constants';\nimport type { ExtensionMetadata } from '@pixi/core';\nimport { BufferResource, ExtensionType } from '@pixi/core';\nimport { CompressedTextureResource } from '@pixi/compressed-textures';\nimport type {\n    BasisTextureExtensions,\n    BasisBinding } from './Basis';\nimport {\n    BASIS_FORMATS,\n    BASIS_FORMAT_TO_INTERNAL_FORMAT,\n    INTERNAL_FORMAT_TO_BASIS_FORMAT,\n    BASIS_FORMATS_ALPHA\n} from './Basis';\nimport { TranscoderWorker } from './TranscoderWorker';\n\nimport type { CompressedLevelBuffer, INTERNAL_FORMATS } from '@pixi/compressed-textures';\nimport { settings } from '@pixi/settings';\n\nexport type TranscodedResourcesArray = (Array<CompressedTextureResource> | Array<BufferResource>) & {\n    basisFormat: BASIS_FORMATS\n};\n\n/**\n * Loader plugin for handling BASIS supercompressed texture files.\n *\n * To use this loader, you must bind the basis_universal WebAssembly transcoder. There are two ways of\n * doing this:\n *\n * 1. Adding a &lt;script&gt; tag to your HTML page to the transcoder bundle in this package, and serving\n * the WASM binary from the same location.\n *\n * ```js\n * // Copy ./node_modules/@pixi/basis/assets/basis_.wasm into your assets directory\n * // as well, so it is served from the same folder as the JavaScript!\n * &lt;script src=\"./node_modules/@pixi/basis/assets/basis_transcoder.js\" /&gt;\n * ```\n *\n * NOTE: `basis_transcoder.js` expects the WebAssembly binary to be named `basis_transcoder.wasm`.\n * NOTE-2: This method supports transcoding on the main-thread. Only use this if you have 1 or 2 *.basis\n * files.\n *\n * 2. Loading the transcoder source from a URL.\n *\n * ```js\n * // Use this if you to use the default CDN url for @pixi/basis\n * BasisParser.loadTranscoder();\n *\n * // Use this if you want to serve the transcoder on your own\n * BasisParser.loadTranscoder('./basis_transcoder.js', './basis_transcoder.wasm');\n * ```\n *\n * NOTE: This can only be used with web-workers.\n * @class\n * @memberof PIXI\n * @implements {PIXI.ILoaderPlugin}\n */\nexport class BasisParser\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = ExtensionType.Loader;\n\n    public static basisBinding: BasisBinding;\n    private static defaultRGBFormat: { basisFormat: BASIS_FORMATS, textureFormat: INTERNAL_FORMATS | TYPES };\n    private static defaultRGBAFormat: { basisFormat: BASIS_FORMATS, textureFormat: INTERNAL_FORMATS | TYPES };\n    private static fallbackMode = false;\n    private static workerPool: TranscoderWorker[] = [];\n\n    /**\n     * Runs transcoding and populates {@link imageArray}. It will run the transcoding in a web worker\n     * if they are available.\n     * @private\n     */\n    public static async transcode(arrayBuffer: ArrayBuffer): Promise<TranscodedResourcesArray>\n    {\n        let resources: TranscodedResourcesArray;\n\n        if (typeof Worker !== 'undefined' && BasisParser.TranscoderWorker.wasmSource)\n        {\n            resources = await BasisParser.transcodeAsync(arrayBuffer);\n        }\n        else\n        {\n            resources = BasisParser.transcodeSync(arrayBuffer);\n        }\n\n        return resources;\n    }\n\n    /**\n     * Finds a suitable worker for transcoding and sends a transcoding request\n     * @private\n     * @async\n     */\n    public static async transcodeAsync(arrayBuffer: ArrayBuffer): Promise<TranscodedResourcesArray>\n    {\n        if (!BasisParser.defaultRGBAFormat && !BasisParser.defaultRGBFormat)\n        {\n            BasisParser.autoDetectFormats();\n        }\n\n        const workerPool = BasisParser.workerPool;\n\n        let leastLoad = 0x10000000;\n        let worker = null;\n\n        for (let i = 0, j = workerPool.length; i < j; i++)\n        {\n            if (workerPool[i].load < leastLoad)\n            {\n                worker = workerPool[i];\n                leastLoad = worker.load;\n            }\n        }\n\n        if (!worker)\n        {\n            /* eslint-disable-next-line no-use-before-define */\n            worker = new TranscoderWorker();\n\n            workerPool.push(worker);\n        }\n\n        // Wait until worker is ready\n        await worker.initAsync();\n\n        const response = await worker.transcodeAsync(\n            new Uint8Array(arrayBuffer),\n            BasisParser.defaultRGBAFormat.basisFormat,\n            BasisParser.defaultRGBFormat.basisFormat,\n        );\n\n        const basisFormat = response.basisFormat;\n        const imageArray = response.imageArray;\n\n        // whether it is an uncompressed format\n        const fallbackMode = basisFormat > 12;\n        let imageResources: TranscodedResourcesArray;\n\n        if (!fallbackMode)\n        {\n            const format = BASIS_FORMAT_TO_INTERNAL_FORMAT[response.basisFormat];\n\n            // HINT: this.imageArray is CompressedTextureResource[]\n            imageResources = new Array<CompressedTextureResource>(imageArray.length) as TranscodedResourcesArray;\n\n            for (let i = 0, j = imageArray.length; i < j; i++)\n            {\n                imageResources[i] = new CompressedTextureResource(null, {\n                    format,\n                    width: imageArray[i].width,\n                    height: imageArray[i].height,\n                    levelBuffers: imageArray[i].levelArray,\n                    levels: imageArray[i].levelArray.length,\n                });\n            }\n        }\n        else\n        {\n            // TODO: BufferResource does not support manual mipmapping.\n            imageResources = imageArray.map((image) => new BufferResource(\n                new Uint16Array(image.levelArray[0].levelBuffer.buffer), {\n                    width: image.width,\n                    height: image.height,\n                }),\n            ) as TranscodedResourcesArray;\n        }\n\n        imageResources.basisFormat = basisFormat;\n\n        return imageResources;\n    }\n\n    /**\n     * Runs transcoding on the main thread.\n     * @private\n     */\n    public static transcodeSync(arrayBuffer: ArrayBuffer): TranscodedResourcesArray\n    {\n        if (!BasisParser.defaultRGBAFormat && !BasisParser.defaultRGBFormat)\n        {\n            BasisParser.autoDetectFormats();\n        }\n\n        const BASIS = BasisParser.basisBinding;\n\n        const data = new Uint8Array(arrayBuffer);\n        const basisFile = new BASIS.BasisFile(data);\n        const imageCount = basisFile.getNumImages();\n        const hasAlpha = basisFile.getHasAlpha();\n\n        const basisFormat = hasAlpha\n            ? BasisParser.defaultRGBAFormat.basisFormat\n            : BasisParser.defaultRGBFormat.basisFormat;\n        const basisFallbackFormat = BASIS_FORMATS.cTFRGB565;\n        const imageResources = new Array<CompressedTextureResource | BufferResource>(imageCount);\n\n        let fallbackMode = BasisParser.fallbackMode;\n\n        if (!basisFile.startTranscoding())\n        {\n            // #if _DEBUG\n            console.error(`Basis failed to start transcoding!`);\n            // #endif\n\n            basisFile.close();\n            basisFile.delete();\n\n            return null;\n        }\n\n        for (let i = 0; i < imageCount; i++)\n        {\n            // Don't transcode all mipmap levels in fallback mode!\n            const levels = !fallbackMode ? basisFile.getNumLevels(i) : 1;\n            const width = basisFile.getImageWidth(i, 0);\n            const height = basisFile.getImageHeight(i, 0);\n            const alignedWidth = (width + 3) & ~3;\n            const alignedHeight = (height + 3) & ~3;\n\n            const imageLevels = new Array<CompressedLevelBuffer>(levels);\n\n            // Transcode mipmap levels into \"imageLevels\"\n            for (let j = 0; j < levels; j++)\n            {\n                const levelWidth = basisFile.getImageWidth(i, j);\n                const levelHeight = basisFile.getImageHeight(i, j);\n                const byteSize = basisFile.getImageTranscodedSizeInBytes(\n                    i, 0, !fallbackMode ? basisFormat : basisFallbackFormat);\n\n                imageLevels[j] = {\n                    levelID: j,\n                    levelBuffer: new Uint8Array(byteSize),\n                    levelWidth,\n                    levelHeight,\n                };\n\n                if (!basisFile.transcodeImage(\n                    imageLevels[j].levelBuffer, i, 0, !fallbackMode ? basisFormat : basisFallbackFormat, false, false))\n                {\n                    if (fallbackMode)\n                    {\n                        // #if _DEBUG\n                        console.error(`Basis failed to transcode image ${i}, level ${0}!`);\n                        // #endif\n                        break;\n                    }\n                    else\n                    {\n                        // Try transcoding to an uncompressed format before giving up!\n                        // NOTE: We must start all over again as all Resources must be in compressed OR uncompressed.\n                        i = -1;\n                        fallbackMode = true;\n\n                        // #if _DEBUG\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`Basis failed to transcode image ${i}, level ${0} to a compressed texture format. Retrying to an uncompressed fallback format!`);\n                        // #endif\n                        continue;\n                    }\n                }\n            }\n\n            let imageResource;\n\n            if (!fallbackMode)\n            {\n                imageResource = new CompressedTextureResource(null, {\n                    format: BASIS_FORMAT_TO_INTERNAL_FORMAT[basisFormat],\n                    width: alignedWidth,\n                    height: alignedHeight,\n                    levelBuffers: imageLevels,\n                    levels,\n                });\n            }\n            else\n            {\n                // TODO: BufferResource doesn't support manual mipmap levels\n                imageResource = new BufferResource(\n                    new Uint16Array(imageLevels[0].levelBuffer.buffer), { width, height });\n            }\n\n            imageResources[i] = imageResource;\n        }\n\n        basisFile.close();\n        basisFile.delete();\n\n        const transcodedResources = imageResources as TranscodedResourcesArray;\n\n        transcodedResources.basisFormat = !fallbackMode ? basisFormat : basisFallbackFormat;\n\n        return transcodedResources;\n    }\n\n    /**\n     * Detects the available compressed texture formats on the device.\n     * @param extensions - extensions provided by a WebGL context\n     * @ignore\n     */\n    static autoDetectFormats(extensions?: Partial<BasisTextureExtensions>): void\n    {\n        // Auto-detect WebGL compressed-texture extensions\n        if (!extensions)\n        {\n            const canvas = settings.ADAPTER.createCanvas();\n            const gl = canvas.getContext('webgl');\n\n            if (!gl)\n            {\n                console.error('WebGL not available for BASIS transcoding. Silently failing.');\n\n                return;\n            }\n\n            extensions = {\n                s3tc: gl.getExtension('WEBGL_compressed_texture_s3tc'),\n                s3tc_sRGB: gl.getExtension('WEBGL_compressed_texture_s3tc_srgb'), /* eslint-disable-line camelcase */\n                astc: gl.getExtension('WEBGL_compressed_texture_astc'),\n                etc: gl.getExtension('WEBGL_compressed_texture_etc'),\n                etc1: gl.getExtension('WEBGL_compressed_texture_etc1'),\n                pvrtc: gl.getExtension('WEBGL_compressed_texture_pvrtc')\n                    || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n                atc: gl.getExtension('WEBGL_compressed_texture_atc'),\n            };\n        }\n\n        // Discover the available texture formats\n        const supportedFormats: { [id: string]: INTERNAL_FORMATS } = {};\n\n        for (const key in extensions)\n        {\n            const extension = (extensions as any)[key];\n\n            if (!extension)\n            {\n                continue;\n            }\n\n            Object.assign(supportedFormats, Object.getPrototypeOf(extension));\n        }\n\n        // Set the default alpha/non-alpha output formats for basisu transcoding\n        for (let i = 0; i < 2; i++)\n        {\n            const detectWithAlpha = !!i;\n            let internalFormat: number;\n            let basisFormat: number;\n\n            for (const id in supportedFormats)\n            {\n                internalFormat = supportedFormats[id];\n                basisFormat = INTERNAL_FORMAT_TO_BASIS_FORMAT[internalFormat];\n\n                if (basisFormat !== undefined)\n                {\n                    if ((detectWithAlpha && BASIS_FORMATS_ALPHA[basisFormat])\n                        || (!detectWithAlpha && !BASIS_FORMATS_ALPHA[basisFormat]))\n                    {\n                        break;\n                    }\n                }\n            }\n\n            if (internalFormat)\n            {\n                BasisParser[detectWithAlpha ? 'defaultRGBAFormat' : 'defaultRGBFormat'] = {\n                    textureFormat: internalFormat,\n                    basisFormat,\n                };\n            }\n            else\n            {\n                BasisParser[detectWithAlpha ? 'defaultRGBAFormat' : 'defaultRGBFormat'] = {\n                    textureFormat: TYPES.UNSIGNED_SHORT_5_6_5,\n                    basisFormat: BASIS_FORMATS.cTFRGB565,\n                };\n\n                BasisParser.fallbackMode = true;\n            }\n        }\n    }\n\n    /**\n     * Binds the basis_universal transcoder to decompress *.basis files. You must initialize the transcoder library yourself.\n     *\n     * ```js\n     * import { BasisParser } from '@pixi/basis';\n     * import { Loader } from '@pixi/loaders';\n     *\n     * // window.BASIS() returns a Promise-like object\n     * window.BASIS().then((basisLibrary) =>\n     * {\n     *     // Initialize basis-library; otherwise, transcoded results maybe corrupt!\n     *     basisLibrary.initializeBasis();\n     *\n     *     // Bind BasisParser to the transcoder\n     *     BasisParser.bindTranscoder(basisLibrary);\n     * });\n     * ```\n     * @param basisLibrary - the initialized transcoder library\n     * @private\n     */\n    static bindTranscoder(basisLibrary: BasisBinding): void\n    {\n        BasisParser.basisBinding = basisLibrary;\n    }\n\n    /**\n     * Loads the transcoder source code for use in {@link PIXI.BasisParser.TranscoderWorker}.\n     * @private\n     * @param jsURL - URL to the javascript basis transcoder\n     * @param wasmURL - URL to the wasm basis transcoder\n     */\n    static loadTranscoder(jsURL: string, wasmURL: string): Promise<[void, void]>\n    {\n        return BasisParser.TranscoderWorker.loadTranscoder(jsURL, wasmURL);\n    }\n\n    /**\n     * Set the transcoder source code directly\n     * @private\n     * @param jsSource - source for the javascript basis transcoder\n     * @param wasmSource - source for the wasm basis transcoder\n     */\n    static setTranscoder(jsSource: string, wasmSource: ArrayBuffer): void\n    {\n        BasisParser.TranscoderWorker.setTranscoder(jsSource, wasmSource);\n    }\n\n    static TranscoderWorker: typeof TranscoderWorker = TranscoderWorker;\n\n    static get TRANSCODER_WORKER_POOL_LIMIT(): number\n    {\n        return this.workerPool.length || 1;\n    }\n\n    static set TRANSCODER_WORKER_POOL_LIMIT(limit: number)\n    {\n        // TODO: Destroy workers?\n        for (let i = this.workerPool.length; i < limit; i++)\n        {\n            this.workerPool[i] = new TranscoderWorker();\n            this.workerPool[i].initAsync();\n        }\n    }\n}\n","import type { TYPES } from '@pixi/constants';\nimport { MIPMAP_MODES, ALPHA_MODES, FORMATS } from '@pixi/constants';\nimport type { BufferResource, ExtensionMetadata } from '@pixi/core';\nimport { BaseTexture, ExtensionType, Texture } from '@pixi/core';\nimport { CompressedTextureResource } from '@pixi/compressed-textures';\nimport type {\n    BasisBinding } from './Basis';\nimport {\n    BASIS_FORMATS,\n    BASIS_FORMAT_TO_TYPE,\n} from './Basis';\nimport { TranscoderWorker } from './TranscoderWorker';\nimport { LoaderResource } from '@pixi/loaders';\n\nimport type { IResourceMetadata } from '@pixi/loaders';\nimport type { TranscodedResourcesArray } from './BasisParser';\nimport { BasisParser } from './BasisParser';\n\n/**\n * Result when calling registerCompressedTextures.\n * @ignore\n */\n type BasisTexturesResult = Pick<LoaderResource, 'textures' | 'texture'>;\n\nLoaderResource.setExtensionXhrType('basis', LoaderResource.XHR_RESPONSE_TYPE.BUFFER);\n\n/**\n * Loader plugin for handling BASIS supercompressed texture files.\n *\n * To use this loader, you must bind the basis_universal WebAssembly transcoder. There are two ways of\n * doing this:\n *\n * 1. Adding a &lt;script&gt; tag to your HTML page to the transcoder bundle in this package, and serving\n * the WASM binary from the same location.\n *\n * ```js\n * // Copy ./node_modules/@pixi/basis/assets/basis_.wasm into your assets directory\n * // as well, so it is served from the same folder as the JavaScript!\n * &lt;script src=\"./node_modules/@pixi/basis/assets/basis_transcoder.js\" /&gt;\n * ```\n *\n * NOTE: `basis_transcoder.js` expects the WebAssembly binary to be named `basis_transcoder.wasm`.\n * NOTE-2: This method supports transcoding on the main-thread. Only use this if you have 1 or 2 *.basis\n * files.\n *\n * 2. Loading the transcoder source from a URL.\n *\n * ```js\n * // Use this if you to use the default CDN url for @pixi/basis\n * BasisLoader.loadTranscoder();\n *\n * // Use this if you want to serve the transcoder on your own\n * BasisLoader.loadTranscoder('./basis_transcoder.js', './basis_transcoder.wasm');\n * ```\n *\n * NOTE: This can only be used with web-workers.\n * @class\n * @memberof PIXI\n * @implements {PIXI.ILoaderPlugin}\n */\nexport class BasisLoader\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = ExtensionType.Loader;\n\n    /**\n     * Transcodes the *.basis data when the data is loaded. If the transcoder is not bound yet, it\n     * will hook transcoding to {@link BasisResource#onTranscoderInitialized}.\n     * @see PIXI.Loader.loaderMiddleware\n     * @param resource - loader resource that is checked to see if it is a basis file\n     * @param next - callback Function to call when done\n     */\n    public static use(resource: LoaderResource, next: (...args: any[]) => void): void\n    {\n        if (resource.extension === 'basis' && resource.data)\n        {\n            (async () =>\n            {\n                if (!BasisParser.basisBinding && (!BasisParser.TranscoderWorker.wasmSource))\n                {\n                    await TranscoderWorker.onTranscoderInitialized;\n                }\n\n                const resources = await BasisParser.transcode(resource.data);\n\n                Object.assign(resource, BasisLoader.registerTextures(\n                    resource.url,\n                    resources,\n                    resource.metadata,\n                ));\n\n                next();\n            })();\n        }\n        else\n        {\n            next();\n        }\n    }\n\n    /**\n     * Creates textures and adds them to the texture cache\n     * @private\n     * @param url - url of the texture to be used as its ID for the texture cache\n     * @param resources - the transcoded resources\n     * @param metadata - resource metadata\n     */\n    private static registerTextures(\n        url: string,\n        resources: TranscodedResourcesArray,\n        metadata: IResourceMetadata,\n    ): BasisTexturesResult\n    {\n        const result: BasisTexturesResult = {\n            textures: {},\n            texture: null,\n        };\n\n        if (!resources)\n        {\n            return result;\n        }\n\n        // Should be a valid TYPES, FORMATS for uncompressed basis formats\n        const type: TYPES = BASIS_FORMAT_TO_TYPE[resources.basisFormat];\n        const format: FORMATS = resources.basisFormat !== BASIS_FORMATS.cTFRGBA32 ? FORMATS.RGB : FORMATS.RGBA;\n        const resourceList = resources as Array<CompressedTextureResource | BufferResource>;\n\n        const textures = resourceList.map((resource) =>\n            (\n                new Texture(new BaseTexture(resource, Object.assign({\n                    mipmap: resource instanceof CompressedTextureResource && resource.levels > 1\n                        ? MIPMAP_MODES.ON_MANUAL\n                        : MIPMAP_MODES.OFF,\n                    alphaMode: ALPHA_MODES.NO_PREMULTIPLIED_ALPHA,\n                    type,\n                    format,\n                }, metadata)))\n            ));\n\n        textures.forEach((texture: Texture, i: number) =>\n        {\n            const { baseTexture } = texture;\n            const cacheID = `${url}-${i + 1}`;\n\n            BaseTexture.addToCache(baseTexture, cacheID);\n            Texture.addToCache(texture, cacheID);\n\n            if (i === 0)\n            {\n                BaseTexture.addToCache(baseTexture, url);\n                Texture.addToCache(texture, url);\n                result.texture = texture;\n            }\n\n            result.textures[cacheID] = texture;\n        });\n\n        return result;\n    }\n\n    /**\n     * Binds the basis_universal transcoder to decompress *.basis files. You must initialize the transcoder library yourself.\n     *\n     * ```js\n     * import { BasisLoader } from '@pixi/basis';\n     * import { Loader } from '@pixi/loaders';\n     *\n     * // window.BASIS() returns a Promise-like object\n     * window.BASIS().then((basisLibrary) =>\n     * {\n     *     // Initialize basis-library; otherwise, transcoded results maybe corrupt!\n     *     basisLibrary.initializeBasis();\n     *\n     *     // Bind BasisLoader to the transcoder\n     *     BasisLoader.bindTranscoder(basisLibrary);\n     * });\n     * ```\n     * @param basisLibrary - the initialized transcoder library\n     * @private\n     */\n    static bindTranscoder(basisLibrary: BasisBinding): void\n    {\n        BasisParser.basisBinding = basisLibrary;\n    }\n\n    /**\n     * Loads the transcoder source code for use in {@link PIXI.BasisLoader.TranscoderWorker}.\n     * @private\n     * @param jsURL - URL to the javascript basis transcoder\n     * @param wasmURL - URL to the wasm basis transcoder\n     */\n    static loadTranscoder(jsURL: string, wasmURL: string): Promise<[void, void]>\n    {\n        return BasisParser.TranscoderWorker.loadTranscoder(jsURL, wasmURL);\n    }\n\n    /**\n     * Set the transcoder source code directly\n     * @private\n     * @param jsSource - source for the javascript basis transcoder\n     * @param wasmSource - source for the wasm basis transcoder\n     */\n    static setTranscoder(jsSource: string, wasmSource: ArrayBuffer): void\n    {\n        BasisParser.TranscoderWorker.setTranscoder(jsSource, wasmSource);\n    }\n}\n\n","import { extensions } from '@pixi/core';\nimport { BasisLoader } from './BasisLoader';\n\nexport * from './Basis';\nexport * from './BasisLoader';\nexport * from './BasisParser';\nexport * from './TranscoderWorker';\n\nextensions.add(BasisLoader);\n"],"names":["arguments","BASIS_FORMATS","INTERNAL_FORMATS","TYPES","CompressedTextureResource","BufferResource","settings","ExtensionType","LoaderResource","FORMATS","Texture","BaseTexture","MIPMAP_MODES","ALPHA_MODES","extensions"],"mappings":"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"}